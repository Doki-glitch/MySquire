// This is your Prisma schema file,
// learn more about it in the docs  https //pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate  https //pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Personagem {
  id              Int         @id @default(autoincrement())
  nome            String      @db.VarChar(50)
  idade           Int         @db.SmallInt
  raca            String?     @db.VarChar(25)
  background      String?     @db.Text
  caracteristicas String?     @db.Text
  afinidade       Afinidade   @default(Parcialidade)
  ranque          Int         @db.SmallInt
  experiencia     Int         @db.SmallInt
  altura          Decimal     @db.Decimal(3,2)
  status          Status[]
  atributos       Atributo[]
  pericias        Pericia[]
  profissoes      Profissao[]
  especiais       Especiais[]
  armamentos      Armamento[]
  armaduras       Armadura[]
  itens           Item[]
  @@map("personagens")
}

enum Afinidade {
  Restricao       @map("Restrição")
  Parcialidade
  Totalidade
}

model Status {
  id              Int         @id @default(autoincrement())
  vida            Int         @db.SmallInt
  sanidade        Int         @db.SmallInt
  mana            Int         @db.SmallInt
  afinco          Int         @db.SmallInt
  armadura        Int         @db.SmallInt
  estoicismo      Int         @db.SmallInt
  condicoes       Condicao[]
  personagem      Personagem  @relation(fields: [personagemId], references: [id])
  personagemId    Int         @unique
  @@map("status")
}

model Condicao {
  id              Int         @id @default(autoincrement())
  nome            String      @db.VarChar(30)
  duracao         Int         @db.SmallInt
  descricao       String      @db.Text
  status          Status      @relation(fields: [statusId], references: [id])
  statusId        Int
  @@map("condicoes")
}

model Atributo {
  id              Int         @id @default(autoincrement())
  constituicao    Int         @db.SmallInt
  curiosidade     Int         @db.SmallInt
  destreza        Int         @db.SmallInt
  forca           Int         @db.SmallInt
  mistico         Int         @db.SmallInt
  percepcao       Int         @db.SmallInt
  presenca        Int         @db.SmallInt
  razao           Int         @db.SmallInt
  sorte           Int         @db.SmallInt
  vontade         Int         @db.SmallInt
  personagem      Personagem  @relation(fields: [personagemId], references: [id])
  personagemId    Int         @unique
  @@map("atributos")
}

model Pericia {
  id              Int         @id @default(autoincrement())
  adestramento    Int         @db.SmallInt
  ranged          Int         @db.SmallInt
  melee           Int         @db.SmallInt
  desarmado       Int         @db.SmallInt
  atuacao         Int         @db.SmallInt
  furtividade     Int         @db.SmallInt
  historia        Int         @db.SmallInt
  iniciativa      Int         @db.SmallInt
  leitura         Int         @db.SmallInt
  medicina        Int         @db.SmallInt
  mitologia       Int         @db.SmallInt
  negociacao      Int         @db.SmallInt
  persuasao       Int         @db.SmallInt
  psicologia      Int         @db.SmallInt
  teologia        Int         @db.SmallInt
  personagem      Personagem  @relation(fields: [personagemId], references: [id])
  personagemId    Int         @unique
  @@map("pericias")
}

model Profissao {
  id              Int         @id @default(autoincrement())
  nome            String      @db.VarChar(30)
  bonus           Bonus       @default(Constituicao)
  personagem      Personagem  @relation(fields: [personagemId], references: [id])
  personagemId    Int
  habilidades     Habilidade[]
  @@map("profissoes")
}

enum Bonus {
Constituicao       @map("Constituição")
Curiosidade  
Destreza  
Forca              @map("Força")
Mistico            @map("Místico")
Percepcao          @map("Percepção")
Presenca           @map("Presença")
Razao              @map("Razão")
Sorte  
Vontade  
Adestramento 
Armas_a_distancia  @map("Armas à Distância")
Armas_brancas      @map("Armas Brancas")
Artes_marciais     @map("Artes Marciais")
Atuacao            @map("Atuação")
Furtividade  
Historia           @map("História")
Iniciativa  
Leitura  
Medicina 
Mitologia  
Negociacao         @map("Negociação")
Persuasao          @map("Persuasão")
Psicologia  
Teologia  
}

model Habilidade {
  id              Int         @id @default(autoincrement())
  nome            String      @db.VarChar(50)
  valor           Int         @db.SmallInt
  descricao       String      @db.Text
  profissao       Profissao   @relation(fields: [profissaoId], references: [id])
  profissaoId     Int
  @@map("habilidades")
}

model Especiais {
  id              Int         @id @default(autoincrement())
  nome            String      @db.VarChar(50)
  descricao       String      @db.Text
  personagem      Personagem  @relation(fields: [personagemId], references: [id])
  personagemId    Int
  @@map("especiais")
}

model Armamento {
  id              Int         @id @default(autoincrement())
  tipo            String      @default("Armamento")
  nome            String      @db.VarChar(30)
  danoMin         Int         @db.SmallInt
  danoMax         Int         @db.SmallInt
  habilidade      String      @db.Text
  alcance         Alcance     @default(Pessoal)
  carregador      Int?        @db.SmallInt
  recarga         Recarga?    @default(Instantaneo)
  cadencia        Int?        @db.SmallInt
  equipado        Boolean     @db.Boolean
  tamanho         Tamanho     @default(Medio)
  descricao       String?     @db.Text
  caracteristica  CaracteristicaArma[]
  requerimento    Requerimento[]
  penalidade      Penalidade[]
  personagem      Personagem  @relation(fields: [personagemId], references: [id])
  personagemId    Int
  @@map("armamentos")     
}

enum Alcance {
  Pessoal
  Curto
  Medio           @map("Médio")
  Longo
  Superior
}

enum Recarga {
  Instantaneo     @map("Instantâneo")
  Acao_extra      @map("Ação Extra")
  Turno_inteiro   @map("Turno Inteiro")
}

model CaracteristicaArma {
  id              Int         @id @default(autoincrement())
  nome            String      @db.VarChar(30)
  descricao       String      @db.Text
  armamento       Armamento   @relation(fields: [armamentoId], references: [id])
  armamentoId     Int
  @@map("caracteristicas")
}

model Requerimento {
  id              Int         @id @default(autoincrement())
  atributo        String      @db.VarChar(50)
  valor           Int         @db.SmallInt
  armamento       Armamento   @relation(fields: [armamentoId], references: [id])
  armamentoId     Int
  @@map("requerimentos")
}

model Penalidade {
  id              Int         @id @default(autoincrement())
  nome            String      @db.VarChar(50)
  valor           Int         @db.SmallInt
  armamento       Armamento   @relation(fields: [armamentoId], references: [id])
  armamentoId     Int
  @@map("penalidades")
}

model Armadura {
  id              Int         @id @default(autoincrement())
  tipo            String      @default("Armadura")
  peca            Peca        @default(Peito)
  protecao        Int         @db.SmallInt
  equipado        Boolean     @db.Boolean
  tamanho         Tamanho     @default(Medio)
  descricao       String?     @db.Text
  caracteristicas CaracteristicaArmadura[]
  personagem      Personagem  @relation(fields: [personagemId], references: [id])
  personagemId    Int
}

enum Peca {
  Cabeca          @map("Cabeça")
  Ombro
  Peito
  Capa
  Luva
  Cinto
  Colar
  Anel
  Perna 
  Bota
}

model CaracteristicaArmadura {
  id              Int         @id @default(autoincrement())
  nome            String      @db.VarChar(30)
  descricao       String      @db.Text
  armadura        Armadura    @relation(fields: [armaduraId], references: [id])
  armaduraId      Int
}

model Item {
  id              Int         @id @default(autoincrement())
  tipo            String      @default("Item")
  nome            String      @db.VarChar(30)
  descricao       String      @db.Text
  quantidade      Int         @db.SmallInt
  tamanho         Tamanho     @default(Medio)
  personagem      Personagem  @relation(fields: [personagemId], references: [id])
  personagemId    Int
}

enum Tamanho {
  Muito_pequeno   @map("Muito Pequeno")
  Pequeno
  Medio           @map("Médio")
  Grande
  Muito_grande    @map("Muito Grande")
}

/*model Magia {
  id              Int         @id @default(autoincrement())
  nome            String      @db.VarChar(50)
  custo           Int         @db.SmallInt
  tipo            Tipo        @default(Apoio)
  subtipo         Subtipo     @default(Cura)
  curaMin         Int?        @db.SmallInt
  curaMax         Int?        @db.SmallInt
  duracao         Int?        @db.SmallInt
  efeito          Efeito[]
  purifica        Purifica?   @default(Unico)
  danoMin         Int?        @db.SmallInt
  danoMax         Int?        @db.SmallInt
  escudoMin       Int?        @db.SmallInt
  escudoMax       Int?        @db.SmallInt
  alvos           Alvo?       @default(Unico)
  tipoAlvo        TipoAlvo?   @default(Aliado)
  invoHPMin       Int?        @db.SmallInt  
  invoHPMax       Int?        @db.SmallInt
  invoATKMin      Int?        @db.SmallInt
  invoATKMax      Int?        @db.SmallInt
  invoLS          Boolean     @default(false)
  invoCRIT        Boolean     @default(false)
  invoDEF         Int         @db.SmallInt
  invoSELFBUFF    Boolean     @default(false)
  invoSPWNMin     Int?        @db.SmallInt
  invoSPWNMax     Int?        @db.SmallInt
  invoSPECBUFF    Boolean     @default(false)
  descricao       String      @db.Text
  @@map("magias")
}*/

model Magia {
  id              Int         @id @default(autoincrement())
  nome            String      @db.VarChar(30)
  tipo            Tipo        @default(Ataque)
  cura            MagiaCura[]
  buff            MagiaBuff[]
  cleanse         MagiaCleanse[]
  movimento       MagiaMove[]
  dano            MagiaDano[]
  dot             MagiaDoT[]
  debuff          MagiaDebuff[]
  curse           MagiaCurse[]
  remove          MagiaRemove[]
  escudo          MagiaEscudo[]
  resguardo       MagiaDef[]
}

model MagiaCura {
  id              Int         @id @default(autoincrement())
  subtipo         Subtipo     @default(Cura)
  grau            Grau        @default(Grau2)
  custo           Custo       @default(Custo2)
  curaMin         CuraMin     @default(CuraMin2)
  curaMax         CuraMax     @default(CuraMax2)
  alvos           Alvo        @default(Unico)
  tipoAlvo        TipoAlvo    @default(Aliado)
  magia           Magia       @relation(fields: [magiaId], references: [id])
  magiaId         Int
}

model MagiaBuff {
  id              Int         @id @default(autoincrement())
  subtipo         Subtipo     @default(Potencializacao)
  grau            Grau        @default(Grau2)
  custo           Custo       @default(Custo2)
  duracao         Duracao     @default(Dura10)
  efeito          Efeito[]
  alvos           Alvo        @default(Unico)
  tipoAlvo        TipoAlvo    @default(Aliado)
  magia           Magia       @relation(fields: [magiaId], references: [id])
  magiaId         Int
  magiaGolem      MagiaGolem  @relation(fields: [magiaGolemId], references: [id])
  magiaGolemId    Int
  magiaIdolo      MagiaIdolo  @relation(fields: [magiaIdoloId], references: [id])
  magiaIdoloId      Int
}

model MagiaCleanse {
  id              Int         @id @default(autoincrement())
  subtipo         Subtipo     @default(Purificacao)
  grau            Grau        @default(Grau2)
  custo           Custo       @default(Custo2)
  purifica        Purifica    @default(Unico)
  alvos           Alvo        @default(Unico)
  tipoAlvo        TipoAlvo    @default(Aliado)
  magia           Magia       @relation(fields: [magiaId], references: [id])
  magiaId         Int
}

model MagiaMove {
  id              Int         @id @default(autoincrement())
  subtipo         Subtipo     @default(Movimento)
  grau            Grau        @default(Grau2)
  custo           Custo       @default(Custo2)
  distancia       Alcance     @default(Medio)
  alvos           Alvo        @default(Unico)
  tipoAlvo        TipoAlvo    @default(Aliado)
  magia           Magia       @relation(fields: [magiaId], references: [id])
  magiaId         Int
}

model MagiaDano {
  id              Int         @id @default(autoincrement())
  subtipo         Subtipo     @default(Dano)
  grau            Grau        @default(Grau1)
  custo           Custo       @default(Custo1)
  danoMin         DanoMin     @default(DanoMin1)
  DaniMax         DanoMax     @default(DanoMax1)
  alvos           Alvo        @default(Unico)
  tipoAlvo        TipoAlvo    @default(Inimigo)
  magia           Magia       @relation(fields: [magiaId], references: [id])
  magiaId         Int
}

model MagiaDoT {
  id              Int         @id @default(autoincrement())
  subtipo         Subtipo     @default(Dano_progressivo)
  grau            Grau        @default(Grau1)
  custo           Custo       @default(Custo1)
  danoMin         DanoMin     @default(DanoMin1)
  danoMax         DanoMax     @default(DanoMax1)
  duracao         Duracao     @default(Dura10)
  alvos           Alvo        @default(Unico)
  tipoAlvo        TipoAlvo    @default(Inimigo)
  magia           Magia       @relation(fields: [magiaId], references: [id])
  magiaId         Int
  magiaIdolo      MagiaIdolo  @relation(fields: [magiaIdoloId], references: [id])
  magiaIdoloId    Int
}

model MagiaDebuff {
  id              Int         @id @default(autoincrement())
  subtipo         Subtipo     @default(Debilitante)
  grau            Grau        @default(Grau2)
  custo           Custo       @default(Custo2)
  efeito          Efeito[]
  alvo            Alvo        @default(Unico)
  tipoAlvo        TipoAlvo    @default(Inimigo)
  magia           Magia       @relation(fields: [magiaId], references: [id])
  magiaId         Int 
  magiaNecro      MagiaNecro  @relation(fields: [magiaNecroId], references: [id])
  magiaNecroId    Int
}

model MagiaCurse {
  id              Int         @id @default(autoincrement())
  subtipo         Subtipo     @default(Opressora)
  grau            Grau        @default(Grau3)
  custo           Custo       @default(Custo3)
  efeito          Efeito[]
  alvo            Alvo        @default(Unico)
  tipoAlvo        TipoAlvo    @default(Inimigo)
  magia           Magia       @relation(fields: [magiaId], references: [id])
  magiaId         Int
}

model MagiaRemove {
  id              Int         @id @default(autoincrement())
  subtipo         Subtipo     @default(Disruptiva)
  grau            Grau        @default(Grau2)
  custo           Custo       @default(Custo2)
  distancia       Alcance     @default(Medio)
  alvo            Alvo        @default(Unico)
  tipoAlvo        TipoAlvo    @default(Inimigo)
  magia           Magia       @relation(fields: [magiaId], references: [id])
  magiaId         Int
}

model MagiaEscudo {
  id              Int         @id @default(autoincrement())
  subtipo         Subtipo     @default(Escudo)
  grau            Grau        @default(Grau2)
  custo           Custo       @default(Custo2)
  escudoMin       EscudoMin   @default(EscudoMin2)
  escudoMax       EscudoMax   @default(EscudoMax2)
  alvo            Alvo        @default(Unico)
  tipoAlvo        TipoAlvo    @default(Aliado)
  magia           Magia       @relation(fields: [magiaId], references: [id])
  magiaId         Int
}

model MagiaDef {
  id              Int         @id @default(autoincrement())
  subtipo         Subtipo     @default(Resguardo)
  grau            Grau        @default(Grau2)
  custo           Custo       @default(Custo2)
  efeito          Efeito[]
  alvo            Alvo        @default(Unico)
  tipoAlvo        TipoAlvo    @default(Aliado)
  magia           Magia       @relation(fields: [magiaId], references: [id])
  magiaId         Int
  magiaGolem      MagiaGolem  @relation(fields: [magiaGolemId], references: [id])
  magiaGolemId    Int
}

model MagiaNecro {
  id              Int         @id @default(autoincrement())
  subtipo         Subtipo     @default(Necromancia)
  grau            Grau        @default(Grau2)
  custo           Custo       @default(Custo2)
  invoPV          VidaInvo    @default(Vida2)
  invoATKMin      DanoMin     @default(DanoMin2)
  invoARKMax      DanoMax     @default(DanoMax2)
  magiaDebuff     MagiaDebuff[]
}

model MagiaGolem {
  id              Int         @id @default(autoincrement())
  subtipo         Subtipo     @default(Animacao)
  grau            Grau        @default(Grau2)
  custo           Custo       @default(Custo2)
  invoPV          VidaInvo    @default(Vida2)
  invoATKMin      DanoMin     @default(DanoMin2)
  invoATKMax      DanoMax     @default(DanoMax2)
  armadura        DefInvo     @default(Def2)
  magiaBuff       MagiaBuff[]
  magiaDef        MagiaDef[]        
}

model MagiaIdolo {
  id              Int         @id @default(autoincrement())
  subtipo         Subtipo     @default(Evocacao)
  grau            Grau        @default(Grau4)
  custo           Custo       @default(Custo4)
  invoPV          VidaInvo    @default(Vida4)
  invoATKMin      DanoMin     @default(DanoMin4)
  invoATKMax      DanoMax     @default(DanoMax4)
  invoDMGMin      DanoMin     @default(DanoMin4)
  invoDMGMax      DanoMax     @default(DanoMax4)
  magiaBuff       MagiaBuff[]
  magiaDoT        MagiaDoT[]
}

enum Custo {
  Custo1
  Custo2
  Custo3
  Custo4
  Custo5
}

enum Grau {
  Grau1
  Grau2
  Grau3
  Grau4
  Grau5
}

enum CuraMin {
  CuraMin2
  CuraMin3
  CuraMin4
  CuraMin5
}

enum CuraMax {
  CuraMax2
  CuraMax3
  CuraMax4
  CuraMax5
}

enum DanoMin {
  DanoMin1
  DanoMin2
  DanoMin3
  DanoMin4
  DanoMin5
}

enum DanoMax {
  DanoMax1
  DanoMax2
  DanoMax3
  DanoMax4
  DanoMax5
}

enum EscudoMin {
  EscudoMin2
  EscudoMin3
  EscudoMin4
}

enum EscudoMax {
  EscudoMax2
  EscudoMax3
  EscudoMax4
}

enum VidaInvo {
  Vida2
  Vida3
  Vida4
  Vida5
}

enum DefInvo {
  Def2
  Def3
}

model Efeito {
  id              Int         @id @default(autoincrement())
  nome            String      @db.VarChar(30)
  tipoEfeito      TipoEfeito  @default(Benefico)
  descricao       String      @db.Text
  magiabuff       MagiaBuff   @relation(fields: [magiabuffId], references: [id])
  magiabuffId     Int         @unique
  magiaDebuff     MagiaDebuff @relation(fields: [magiaDebuffId], references: [id])
  magiaDebuffId   Int         @unique
  magiaCurse      MagiaCurse  @relation(fields: [magiaCurseId], references: [id])
  magiaCurseId    Int
  magiaResguardo  MagiaDef    @relation(fields: [magiaDefId], references: [id])
  magiaDefId      Int
  @@map("efeitos")
}

enum TipoEfeito {
  Benefico        @map("Benéfico")
  Benefico_maior  @map("Benéfico Maior")
  Malefico        @map("Maléfico")
  Malefico_maior  @map("Maléfico Maior")
  Defensivo
}

enum Tipo {
  Apoio
  Ataque
  Controle
  Defesa
  Invocacao @map("Invocação")
}

enum Subtipo {
  Cura
  Potencializacao   @map("Potencialização")
  Purificacao       @map("Purificação")
  Movimento
  Dano
  Dano_progressivo  @map("Dano Progressivo")
  Debilitante
  Opressora
  Disruptiva
  Escudo
  Resguardo
  Necromancia
  Animacao          @map("Animação")
  Evocacao          @map("Evocação")
}

enum Purifica {
  Unico   @map("Único")
  Todos
}

enum Alvo {
  Self
  Unico @map("Único")
  Area  @map("Área")
}

enum TipoAlvo {
  Self
  Aliado
  Inimigo
}

enum Duracao {
  Dura3
  Dura5
  Dura10
}

model Anotacao {
  id              Int         @id @default(autoincrement())
  titulo          String      @db.VarChar(50)
  subtitulo       String      @db.VarChar()
  descricao       String      @db.Text
}

model Usuario {
  id            String   @db.VarChar(36) @id @default(uuid())
  nome          String   @db.VarChar(60)
  email         String   @db.VarChar(40)
  senha         String   @db.VarChar(60)   
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt  
  @@map("usuarios")
}
